{
  "name": "grunt-connect-rewrite",
  "description": "Provides RewriteRules middleware for the grunt connect and express.",
  "version": "0.2.1",
  "homepage": "https://github.com/viart/grunt-connect-rewrite",
  "author": {
    "name": "Artem Vitiuk",
    "email": "artem@devart.in.ua"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:viart/grunt-connect-rewrite.git"
  },
  "bugs": {
    "url": "https://github.com/viart/grunt-connect-rewrite/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/viart/grunt-connect-rewrite/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "grunt-contrib-connect",
    "grunt-express",
    "modrewrite",
    "rewriterule",
    "rewrite",
    "route",
    "connect",
    "express"
  ],
  "readme": "# grunt-connect-rewrite v0.2.1 [![Build Status](https://travis-ci.org/viart/grunt-connect-rewrite.png?branch=master)](https://travis-ci.org/viart/grunt-connect-rewrite)\n\n> This plugin provides RewriteRules middleware for the Grunt Connect / Express.\n> Which could be used to redirect (rewrite internally or redirect using HTTP codes) User to the specific URL based on RegExp Rules.\n\n## More flexible alternative\nIn case you like this plugin it makes sense to look at [http-rewrite-middleware](https://github.com/viart/http-rewrite-middleware)\nas more flexible alternative.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-connect-rewrite --save-dev\n```\n\n### Options\n\n##### Rule's format:\n\n`{from: '__from__', to: '__to__'[, redirect: 'permanent'|'temporary']}`\n\nWhere:\n* `__from__` - RegExp string to match.\n* `__to__` - String that replaces matched URL.\n* `redirect` - Optional parameter:\n    * When it is omitted then the Rule will be dispatched as an internal rewrite (aka proxified).\n    * If the value is set then Browser will receive HTTP `Location` Header with value of parsed `__to__` (`permanent` value will give `HTTP 301`, any other value will give `HTTP 302`).\n\n##### rulesProvider\nType: `String`\n\nDefault value: `connect.rules`\n\nYou can specify grunt config section from which Rules will be read, like so:\n\n```js\ngrunt.initConfig({\n    express: {\n        options: {\n            port: 9000\n        },\n        server: {\n            hostname: 'localhost'\n        },\n        rules: [\n            // ... your rules here\n        ]\n    },\n    configureRewriteRules: {\n        options: {\n            rulesProvider: 'express.rules'\n        }\n    }\n})\n```\n\n### Example of usage\nIn your project's Gruntfile:\n* Include the `rewriteRequest` snippet.\n* Add a section named `rules` to your existing Connect or Express definition.\n    **Please note:** unlike options, rules cannot be set per server, so the `rules` attribute must always be nested directly under `connect` or `express`.\n* Add `configureRewriteRules` before the web server task.\n* Don't forget to load the plugin (e.g. `grunt.loadNpmTasks('grunt-connect-rewrite')`).\n\n```js\nvar rewriteRulesSnippet = require('grunt-connect-rewrite/lib/utils').rewriteRequest;\ngrunt.initConfig({\n    connect: {\n        options: {\n            port: 9000,\n            hostname: 'localhost'\n        },\n        rules: [\n            // Internal rewrite\n            {from: '^/index_dev.html$', to: '/src/index.html'},\n            // Internal rewrite\n            {from: '^/js/(.*)$', to: '/src/js/$1'},\n            // 301 Redirect\n            {from: '^/old-stuff/(.*)$', to: '/new-cool-stuff/$1', redirect: 'permanent'},\n            // 302 Redirect\n            {from: '^/stuff/(.*)$', to: '/temporary-stuff/$1', redirect: 'temporary'}\n        ],\n        development: {\n            options: {\n                middleware: function (connect, options) {\n                    var middlewares = [];\n\n                    // RewriteRules support\n                    middlewares.push(rewriteRulesSnippet);\n\n                    if (!Array.isArray(options.base)) {\n                        options.base = [options.base];\n                    }\n\n                    var directory = options.directory || options.base[options.base.length - 1];\n                    options.base.forEach(function (base) {\n                        // Serve static files.\n                        middlewares.push(connect.static(base));\n                    });\n\n                    // Make directory browse-able.\n                    middlewares.push(connect.directory(directory));\n\n                    return middlewares;\n                }\n            }\n        }\n    }\n})\n\ngrunt.loadNpmTasks('grunt-contrib-connect');\ngrunt.loadNpmTasks('grunt-connect-rewrite');\n\n// \"configureRewriteRules\" should be before the \"connect\"/\"express\" task\ngrunt.registerTask('server', function (target) {\n    grunt.task.run([\n        'configureRewriteRules',\n        'connect:development'\n    ]);\n});\n```\n\n### Debugging rules\n\nIn order to debug Rules you need to run grunt with a `--verbose` command-line option this will enable logging of matched rules.\nThe message will explain which `__from__` rule was matched and what was the result of the rewrite.\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n* 2014.01.29 `v0.2.1` Add logging support\n* 2013.11.21 `v0.2.0` Add support for Browser's redirects (HTTP 301/302)\n* 2013.07.27 `v0.1.1` Add possibility to read settings from custom grunt config path\n* 2013.04.12 `v0.1.0` Initial Release\n",
  "readmeFilename": "README.md",
  "_id": "grunt-connect-rewrite@0.2.1",
  "_shasum": "ba7e333aed6e679237945e58e1fd19626645b2eb",
  "_from": "grunt-connect-rewrite@",
  "_resolved": "https://registry.npmjs.org/grunt-connect-rewrite/-/grunt-connect-rewrite-0.2.1.tgz"
}
